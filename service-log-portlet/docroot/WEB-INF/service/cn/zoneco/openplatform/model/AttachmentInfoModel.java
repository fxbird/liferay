/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package cn.zoneco.openplatform.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.sql.Blob;

import java.util.Date;

/**
 * The base model interface for the AttachmentInfo service. Represents a row in the &quot;t_attachment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link cn.zoneco.openplatform.model.impl.AttachmentInfoModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link cn.zoneco.openplatform.model.impl.AttachmentInfoImpl}.
 * </p>
 *
 * @author fxbird
 * @see AttachmentInfo
 * @see cn.zoneco.openplatform.model.impl.AttachmentInfoImpl
 * @see cn.zoneco.openplatform.model.impl.AttachmentInfoModelImpl
 * @generated
 */
public interface AttachmentInfoModel extends BaseModel<AttachmentInfo> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a attachment info model instance should use the {@link AttachmentInfo} interface instead.
	 */

	/**
	 * Returns the primary key of this attachment info.
	 *
	 * @return the primary key of this attachment info
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this attachment info.
	 *
	 * @param primaryKey the primary key of this attachment info
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the attach ID of this attachment info.
	 *
	 * @return the attach ID of this attachment info
	 */
	public long getAttachId();

	/**
	 * Sets the attach ID of this attachment info.
	 *
	 * @param attachId the attach ID of this attachment info
	 */
	public void setAttachId(long attachId);

	/**
	 * Returns the ori name of this attachment info.
	 *
	 * @return the ori name of this attachment info
	 */
	@AutoEscape
	public String getOriName();

	/**
	 * Sets the ori name of this attachment info.
	 *
	 * @param oriName the ori name of this attachment info
	 */
	public void setOriName(String oriName);

	/**
	 * Returns the save name of this attachment info.
	 *
	 * @return the save name of this attachment info
	 */
	@AutoEscape
	public String getSaveName();

	/**
	 * Sets the save name of this attachment info.
	 *
	 * @param saveName the save name of this attachment info
	 */
	public void setSaveName(String saveName);

	/**
	 * Returns the type code of this attachment info.
	 *
	 * @return the type code of this attachment info
	 */
	@AutoEscape
	public String getTypeCode();

	/**
	 * Sets the type code of this attachment info.
	 *
	 * @param typeCode the type code of this attachment info
	 */
	public void setTypeCode(String typeCode);

	/**
	 * Returns the att content of this attachment info.
	 *
	 * @return the att content of this attachment info
	 */
	public Blob getAttContent();

	/**
	 * Sets the att content of this attachment info.
	 *
	 * @param attContent the att content of this attachment info
	 */
	public void setAttContent(Blob attContent);

	/**
	 * Returns the ext name of this attachment info.
	 *
	 * @return the ext name of this attachment info
	 */
	@AutoEscape
	public String getExtName();

	/**
	 * Sets the ext name of this attachment info.
	 *
	 * @param extName the ext name of this attachment info
	 */
	public void setExtName(String extName);

	/**
	 * Returns the create date of this attachment info.
	 *
	 * @return the create date of this attachment info
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this attachment info.
	 *
	 * @param createDate the create date of this attachment info
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the create by of this attachment info.
	 *
	 * @return the create by of this attachment info
	 */
	public long getCreateBy();

	/**
	 * Sets the create by of this attachment info.
	 *
	 * @param createBy the create by of this attachment info
	 */
	public void setCreateBy(long createBy);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(AttachmentInfo attachmentInfo);

	@Override
	public int hashCode();

	@Override
	public CacheModel<AttachmentInfo> toCacheModel();

	@Override
	public AttachmentInfo toEscapedModel();

	@Override
	public AttachmentInfo toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}