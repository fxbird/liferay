/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package cn.zoneco.openplatform.model.impl;

import cn.zoneco.openplatform.model.CheckStatus;
import cn.zoneco.openplatform.model.CheckStatusModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CheckStatus service. Represents a row in the &quot;t_status&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link cn.zoneco.openplatform.model.CheckStatusModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CheckStatusImpl}.
 * </p>
 *
 * @author fxbird
 * @see CheckStatusImpl
 * @see cn.zoneco.openplatform.model.CheckStatus
 * @see cn.zoneco.openplatform.model.CheckStatusModel
 * @generated
 */
public class CheckStatusModelImpl extends BaseModelImpl<CheckStatus>
	implements CheckStatusModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a check status model instance should use the {@link cn.zoneco.openplatform.model.CheckStatus} interface instead.
	 */
	public static final String TABLE_NAME = "t_status";
	public static final Object[][] TABLE_COLUMNS = {
			{ "status_id", Types.BIGINT },
			{ "status_name", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table t_status (status_id LONG not null primary key,status_name VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table t_status";
	public static final String ORDER_BY_JPQL = " ORDER BY checkStatus.statusId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY t_status.status_id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.cn.zoneco.openplatform.model.CheckStatus"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.cn.zoneco.openplatform.model.CheckStatus"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.cn.zoneco.openplatform.model.CheckStatus"));

	public CheckStatusModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _statusId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setStatusId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _statusId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CheckStatus.class;
	}

	@Override
	public String getModelClassName() {
		return CheckStatus.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("statusId", getStatusId());
		attributes.put("statusName", getStatusName());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long statusId = (Long)attributes.get("statusId");

		if (statusId != null) {
			setStatusId(statusId);
		}

		String statusName = (String)attributes.get("statusName");

		if (statusName != null) {
			setStatusName(statusName);
		}
	}

	@Override
	public long getStatusId() {
		return _statusId;
	}

	@Override
	public void setStatusId(long statusId) {
		_statusId = statusId;
	}

	@Override
	public String getStatusName() {
		if (_statusName == null) {
			return StringPool.BLANK;
		}
		else {
			return _statusName;
		}
	}

	@Override
	public void setStatusName(String statusName) {
		_statusName = statusName;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			CheckStatus.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CheckStatus toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CheckStatus)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CheckStatusImpl checkStatusImpl = new CheckStatusImpl();

		checkStatusImpl.setStatusId(getStatusId());
		checkStatusImpl.setStatusName(getStatusName());

		checkStatusImpl.resetOriginalValues();

		return checkStatusImpl;
	}

	@Override
	public int compareTo(CheckStatus checkStatus) {
		long primaryKey = checkStatus.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CheckStatus)) {
			return false;
		}

		CheckStatus checkStatus = (CheckStatus)obj;

		long primaryKey = checkStatus.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<CheckStatus> toCacheModel() {
		CheckStatusCacheModel checkStatusCacheModel = new CheckStatusCacheModel();

		checkStatusCacheModel.statusId = getStatusId();

		checkStatusCacheModel.statusName = getStatusName();

		String statusName = checkStatusCacheModel.statusName;

		if ((statusName != null) && (statusName.length() == 0)) {
			checkStatusCacheModel.statusName = null;
		}

		return checkStatusCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{statusId=");
		sb.append(getStatusId());
		sb.append(", statusName=");
		sb.append(getStatusName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("cn.zoneco.openplatform.model.CheckStatus");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>statusId</column-name><column-value><![CDATA[");
		sb.append(getStatusId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusName</column-name><column-value><![CDATA[");
		sb.append(getStatusName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CheckStatus.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CheckStatus.class
		};
	private long _statusId;
	private String _statusName;
	private CheckStatus _escapedModel;
}